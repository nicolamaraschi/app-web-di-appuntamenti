{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/booking.service.ts","./src/app/booking/booking.component.ts","./src/app/booking/booking.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/main.ts"],"sourcesContent":["// app-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BookingComponent } from './booking/booking.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'booking', component: BookingComponent },\n  { path: '', redirectTo: '/login', pathMatch: 'full' } // Redirect to login by default\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  currentView: 'login' | 'registration' | 'booking' = 'login'; // Imposta la vista iniziale\n\n  showLogin() {\n    this.currentView = 'login';\n  }\n\n  showRegistration() {\n    this.currentView = 'registration';\n  }\n\n  showBooking() {\n    this.currentView = 'booking';\n  }\n}\n","<app-navbar \n  (showLogin)=\"showLogin()\" \n  (showRegistration)=\"showRegistration()\" \n  (showBooking)=\"showBooking()\">\n</app-navbar>\n\n<div class=\"container mt-4\">\n  <app-login *ngIf=\"currentView === 'login'\" (showRegistration)=\"showRegistration()\"></app-login>\n  <app-register *ngIf=\"currentView === 'registration'\" (showLogin)=\"showLogin()\"></app-register>\n  <app-booking *ngIf=\"currentView === 'booking'\" (showLogin)=\"showLogin()\"></app-booking>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BookingComponent } from './booking/booking.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthService } from './auth.service';\nimport { BookingService } from './booking.service';\nimport { NavbarComponent } from './navbar/navbar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    BookingComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService, BookingService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private apiUrl = 'http://localhost:5001/api/users'; \n\n  constructor(private http: HttpClient) { }\n\n  register(userData: { username: string, email: string, password: string, role: string }): Observable<any> {\n    return this.http.post(`${this.apiUrl}/register`, userData);\n  }\n\n  login(credentials: { email: string, password: string }): Observable<any> {\n    return this.http.post(`${this.apiUrl}/login`, credentials);\n  }\n\n  logout(): Observable<any> {\n    return this.http.post(`${this.apiUrl}/logout`, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BookingService {\n  private apiUrl = 'http://localhost:5001'; // Modifica con l'URL del tuo server\n\n  constructor(private http: HttpClient) {}\n\n  book(name: string, date: string, time: string, details: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/book`, { name, date, time, details });\n  }\n}\n","import { Component } from '@angular/core';\nimport { BookingService } from '../booking.service';\n\n@Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent {\n  bookingData = { name: '', date: '', time: '', details: '' };\n\n  constructor(private bookingService: BookingService) {}\n\n  onBook() {\n    this.bookingService.book(this.bookingData.name, this.bookingData.date, this.bookingData.time, this.bookingData.details).subscribe(\n      response => {\n        console.log('Booking successful:', response);\n        // Redirect or show success message\n      },\n      error => {\n        console.error('Booking error:', error);\n      }\n    );\n  }\n}\n","<!-- booking.component.html -->\n<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8 col-lg-6\">\n      <div class=\"card\">\n        <div class=\"card-header text-center\">\n          <h4>Book a Reservation</h4>\n        </div>\n        <div class=\"card-body\">\n          <form (ngSubmit)=\"onBook()\">\n            <div class=\"form-group mb-3\">\n              <label for=\"name\">Name</label>\n              <input type=\"text\" id=\"name\" class=\"form-control\" [(ngModel)]=\"bookingData.name\" name=\"name\" required>\n            </div>\n            <div class=\"form-group mb-3\">\n              <label for=\"date\">Date</label>\n              <input type=\"date\" id=\"date\" class=\"form-control\" [(ngModel)]=\"bookingData.date\" name=\"date\" required>\n            </div>\n            <div class=\"form-group mb-3\">\n              <label for=\"time\">Time</label>\n              <input type=\"time\" id=\"time\" class=\"form-control\" [(ngModel)]=\"bookingData.time\" name=\"time\" required>\n            </div>\n            <div class=\"form-group mb-3\">\n              <label for=\"details\">Details</label>\n              <textarea id=\"details\" class=\"form-control\" [(ngModel)]=\"bookingData.details\" name=\"details\" rows=\"4\"></textarea>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Book</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { AuthService } from '../auth.service'; // Importa il servizio di autenticazione\nimport { Router } from '@angular/router'; // Importa il router per la navigazione\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  @Output() showRegistration = new EventEmitter<void>();\n  @Output() showBooking = new EventEmitter<void>(); // Evento per passare alla pagina di prenotazione\n\n  loginData = {\n    email: '',\n    password: ''\n  };\n\n  constructor(private authService: AuthService, private router: Router) {} // Inietta il servizio AuthService e Router\n\n  onShowRegistration() {\n    this.showRegistration.emit();\n  }\n\n  onLogin() {\n    this.authService.login(this.loginData).subscribe(\n      response => {\n        console.log('Login successful:', response);\n        this.router.navigate(['/booking']).then(() => {\n          console.log('Navigation to /booking successful');\n        }).catch(err => {\n          console.error('Navigation to /booking failed', err);\n        });\n      },\n      error => {\n        console.error('Login failed:', error);\n        // Gestisci l'errore di login, ad esempio mostrando un messaggio all'utente\n      }\n    );\n  }\n  \n}\n","<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header text-center\">\n          <h4>Login</h4>\n        </div>\n        <div class=\"card-body\">\n          <form (ngSubmit)=\"onLogin()\">\n            <div class=\"form-group mb-3\">\n              <label for=\"loginEmail\">Email</label>\n              <input type=\"email\" id=\"loginEmail\" class=\"form-control\" [(ngModel)]=\"loginData.email\" name=\"email\" required>\n            </div>\n            <div class=\"form-group mb-3\">\n              <label for=\"loginPassword\">Password</label>\n              <input type=\"password\" id=\"loginPassword\" class=\"form-control\" [(ngModel)]=\"loginData.password\" name=\"password\" required>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>\n            <div class=\"text-center mt-3\">\n              <p>Don't have an account? <a href=\"#\" (click)=\"onShowRegistration(); $event.preventDefault();\">Register here</a></p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  @Output() showLogin = new EventEmitter<void>();\n  @Output() showRegistration = new EventEmitter<void>();\n  @Output() showBooking = new EventEmitter<void>();\n\n  isLoggedIn: boolean = false;\n\n  constructor() {\n    this.isLoggedIn = !!localStorage.getItem('authToken');\n  }\n\n  onShowLogin() {\n    this.showLogin.emit();\n  }\n\n  onShowRegistration() {\n    this.showRegistration.emit();\n  }\n\n  onShowBooking() {\n    this.showBooking.emit();\n  }\n\n  logout() {\n    localStorage.removeItem('authToken');\n    this.isLoggedIn = false;\n    this.showLogin.emit(); // Torna alla schermata di login\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\" href=\"#\">MyApp</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav ms-auto\">\n      <li *ngIf=\"!isLoggedIn\" class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"onShowLogin(); $event.preventDefault();\">Login</a>\n      </li>\n      <li *ngIf=\"!isLoggedIn\" class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"onShowRegistration(); $event.preventDefault();\">Registrati</a>\n      </li>\n      <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"onShowBooking(); $event.preventDefault();\">Prenotazioni</a>\n      </li>\n      <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"logout(); $event.preventDefault();\">Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, EventEmitter, Output } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  @Output() showLogin = new EventEmitter<void>();\n\n  registrationData = {\n    username: '',  \n    email: '',\n    password: '',\n    role: 'user'\n  };\n  \n\n  constructor(private authService: AuthService) {}\n\n  onShowLogin() {\n    this.showLogin.emit();\n  }\n\n  onRegister() {\n    this.authService.register(this.registrationData).subscribe(\n      response => {\n        console.log('Registration successful:', response);\n        this.onShowLogin(); // Vai alla schermata di login\n      },\n      error => {\n        console.error('Registration failed:', error);\n      }\n    );\n  }\n}\n","<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6 col-lg-4\">\n      <div class=\"card\">\n        <div class=\"card-header text-center\">\n          <h4>Register</h4>\n        </div>\n        <div class=\"card-body\">\n          <form (ngSubmit)=\"onRegister()\">\n            <div class=\"form-group mb-3\">\n              <label for=\"registerUsername\">Username</label>\n              <input type=\"text\" id=\"registerUsername\" class=\"form-control\" [(ngModel)]=\"registrationData.username\" name=\"username\" required>\n            </div>\n            <div class=\"form-group mb-3\">\n              <label for=\"registerEmail\">Email</label>\n              <input type=\"email\" id=\"registerEmail\" class=\"form-control\" [(ngModel)]=\"registrationData.email\" name=\"email\" required>\n            </div>\n            <div class=\"form-group mb-3\">\n              <label for=\"registerPassword\">Password</label>\n              <input type=\"password\" id=\"registerPassword\" class=\"form-control\" [(ngModel)]=\"registrationData.password\" name=\"password\" required>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Register</button>\n            <div class=\"text-center mt-3\">\n              <p>Already have an account? <a href=\"#\" (click)=\"onShowLogin(); $event.preventDefault();\">Login here</a></p>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","LoginComponent","RegisterComponent","BookingComponent","routes","path","component","redirectTo","pathMatch","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","i0","ɵɵelementStart","ɵɵlistener","AppComponent_app_login_2_Template_app_login_showRegistration_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","showRegistration","ɵɵelementEnd","AppComponent_app_register_3_Template_app_register_showLogin_0_listener","_r6","ctx_r5","showLogin","AppComponent_app_booking_4_Template_app_booking_showLogin_0_listener","_r8","ctx_r7","AppComponent","constructor","currentView","showBooking","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_Template_app_navbar_showLogin_0_listener","AppComponent_Template_app_navbar_showRegistration_0_listener","AppComponent_Template_app_navbar_showBooking_0_listener","ɵɵtemplate","AppComponent_app_login_2_Template","AppComponent_app_register_3_Template","AppComponent_app_booking_4_Template","ɵɵadvance","ɵɵproperty","BrowserModule","FormsModule","HttpClientModule","AuthService","BookingService","NavbarComponent","AppModule","bootstrap","declarations","http","apiUrl","register","userData","post","login","credentials","logout","ɵɵinject","HttpClient","factory","ɵfac","providedIn","book","name","date","time","details","bookingService","bookingData","onBook","subscribe","response","console","log","error","ɵɵdirectiveInject","BookingComponent_Template","ɵɵtext","BookingComponent_Template_form_ngSubmit_8_listener","BookingComponent_Template_input_ngModelChange_12_listener","$event","BookingComponent_Template_input_ngModelChange_16_listener","BookingComponent_Template_input_ngModelChange_20_listener","BookingComponent_Template_textarea_ngModelChange_24_listener","EventEmitter","authService","router","loginData","email","password","onShowRegistration","emit","onLogin","navigate","then","catch","err","i2","Router","outputs","LoginComponent_Template","LoginComponent_Template_form_ngSubmit_8_listener","LoginComponent_Template_input_ngModelChange_12_listener","LoginComponent_Template_input_ngModelChange_16_listener","LoginComponent_Template_a_click_22_listener","preventDefault","NavbarComponent_li_7_Template_a_click_1_listener","_r5","ctx_r4","onShowLogin","NavbarComponent_li_8_Template_a_click_1_listener","_r7","ctx_r6","NavbarComponent_li_9_Template_a_click_1_listener","_r9","ctx_r8","onShowBooking","NavbarComponent_li_10_Template_a_click_1_listener","_r11","ctx_r10","isLoggedIn","localStorage","getItem","removeItem","NavbarComponent_Template","ɵɵelement","NavbarComponent_li_7_Template","NavbarComponent_li_8_Template","NavbarComponent_li_9_Template","NavbarComponent_li_10_Template","registrationData","username","role","onRegister","RegisterComponent_Template","RegisterComponent_Template_form_ngSubmit_8_listener","RegisterComponent_Template_input_ngModelChange_12_listener","RegisterComponent_Template_input_ngModelChange_16_listener","RegisterComponent_Template_input_ngModelChange_20_listener","RegisterComponent_Template_a_click_26_listener","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}